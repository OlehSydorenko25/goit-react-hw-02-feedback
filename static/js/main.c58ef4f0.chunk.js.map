{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.js","Components/Container/Container.js","Components/Notification/Notification.js","Components/Statistics/Statistics.js","App.js","index.js","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Container/Container.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","index","type","name","onClick","className","styles","button","Container","children","container","defaultProps","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","Feedback","state","handleChange","event","target","setState","prevState","this","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","App","document","getElementById","module","exports"],"mappings":"wQAwBeA,EAnBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,gCACI,uDAECD,EAAQE,KAAI,SAACC,EAAQC,GAClB,OACI,wBAAoBC,KAAK,SAASC,KAAMH,EAAQI,QAASN,EAAiBO,UAAWC,IAAOC,OAA5F,SAAqGP,GAAxFC,U,gBCN3BO,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,qBAAKJ,UAAWC,IAAOI,UAAvB,SAAmCD,KAO5CD,EAAUG,aAAe,CACvBF,SAAU,IAGGD,QCPAI,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCAPC,EAAa,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAC5C,OACI,gCACI,4CAECD,EAAQ,EAED,+BACI,wCAAWH,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,UAGJ,cAAC,EAAD,CAAcN,QAAQ,0BAO1CC,EAAWH,aAAe,CACtBO,MAAO,EACPC,mBAAoB,GAWTL,QC/BTM,G,kNASFC,MAAQ,CACJN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTK,aAAe,SAAAC,GAAU,IACbpB,EAASoB,EAAMC,OAAfrB,KAER,EAAKsB,UAAS,SAAAC,GAAS,sBACtBvB,EAAOuB,EAAUvB,GAAQ,O,wDAI9B,WAAsB,IAAD,EACYwB,KAAKN,MAClC,OAFiB,EACVN,KADU,EACJC,QADI,EACKC,M,6CAI1B,WACI,OAAOW,KAAKC,MAAyB,IAAlBF,KAAKN,MAAMN,KAAeY,KAAKG,wB,oBAGtD,WACI,IADK,EAEwBH,KAAKN,MAA3BN,EAFF,EAEEA,KAAMC,EAFR,EAEQA,QAASC,EAFjB,EAEiBA,IACtB,OACI,eAAC,EAAD,WACI,cAAC,EAAD,CACGpB,QALK,CAAC,OAAQ,UAAW,OAMzBC,gBAAiB6B,KAAKL,eAGzB,cAAC,EAAD,CACIP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,KAAKG,qBACZX,mBAAoBQ,KAAKI,2C,GA/CtBC,cAAjBZ,EACKT,aAAe,GAqDXS,QCzDfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,kC,kBCA3BD,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.c58ef4f0.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css'\r\n\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <div>\r\n            <h1>Please leave feedback</h1>\r\n\r\n            {options.map((option, index) => {\r\n                return (\r\n                    <button key={index} type='button' name={option} onClick={onLeaveFeedback} className={styles.button}>{option}</button>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n};\r\n \r\nexport default FeedbackOptions;","  \r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from'./Container.module.css'\r\n\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={styles.container}>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nContainer.defaultProps = {\r\n  children: [],\r\n};\r\n\r\nexport default Container;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport Notification from '../Notification/Notification'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) => {\r\n    return (\r\n        <div>\r\n            <h1>Statistics</h1>\r\n\r\n            {total > 0 ?\r\n                (\r\n                    <ul>\r\n                        <li>Good: {good}</li>\r\n                        <li>Neutral: {neutral}</li>\r\n                        <li>Bad: {bad}</li>\r\n                        <li>Total: {total}</li>\r\n                        <li>Positive feedback: {positivePercentage}%</li>\r\n                    </ul>\r\n                ) : (\r\n                    <Notification message=\"No feedback given\"/>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nStatistics.defaultProps = {\r\n    total: 0,\r\n    positivePercentage: 0\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n \r\nexport default Statistics;","import React, { Component } from 'react';\r\nimport FeedbackOptions from './Components/FeedbackOptions/FeedbackOptions';\r\nimport Container from './Components/Container/Container'\r\nimport Statistics from './Components/Statistics/Statistics';\r\nimport styles from './index.module.css'\r\n\r\n\r\n\r\nclass Feedback extends Component {\r\n    static defaultProps = {\r\n        // \r\n    }\r\n\r\n    static propTypes = {\r\n        // \r\n    }\r\n    \r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name } = event.target;\r\n\r\n        this.setState(prevState => ({\r\n        [name]: prevState[name] + 1,\r\n        }));\r\n    };\r\n\r\n    countTotalFeedback() {\r\n        const {good, neutral, bad} = this.state\r\n        return good + neutral + bad\r\n    }\r\n\r\n    countPositiveFeedbackPercentage () {\r\n        return Math.round((this.state.good * 100 ) / this.countTotalFeedback())\r\n    }\r\n\r\n    render() {\r\n        const buttons = ['good', 'neutral', 'bad']\r\n        const {good, neutral, bad} = this.state\r\n        return (\r\n            <Container>\r\n                <FeedbackOptions\r\n                   options={buttons}\r\n                   onLeaveFeedback={this.handleChange}\r\n                />\r\n\r\n                <Statistics\r\n                    good={good}\r\n                    neutral={neutral}\r\n                    bad={bad}\r\n                    total={this.countTotalFeedback ()}\r\n                    positivePercentage={this.countPositiveFeedbackPercentage ()}\r\n                />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Feedback;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1CzC_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1nNDk\"};"],"sourceRoot":""}